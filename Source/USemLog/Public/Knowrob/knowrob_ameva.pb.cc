// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: knowrob_ameva.proto

#include "knowrob_ameva.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_knowrob_5fameva_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ViewEntityPoseAtParams_knowrob_5fameva_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_knowrob_5fameva_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ViewEntityTrajParams_knowrob_5fameva_2eproto;
namespace knowrob_ameva {
class ViewEntityPoseAtParamsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ViewEntityPoseAtParams> _instance;
} _ViewEntityPoseAtParams_default_instance_;
class ViewEntityTrajParamsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ViewEntityTrajParams> _instance;
} _ViewEntityTrajParams_default_instance_;
class KRAmevaEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<KRAmevaEvent> _instance;
} _KRAmevaEvent_default_instance_;
}  // namespace knowrob_ameva
static void InitDefaultsscc_info_KRAmevaEvent_knowrob_5fameva_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::knowrob_ameva::_KRAmevaEvent_default_instance_;
    new (ptr) ::knowrob_ameva::KRAmevaEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::knowrob_ameva::KRAmevaEvent::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_KRAmevaEvent_knowrob_5fameva_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_KRAmevaEvent_knowrob_5fameva_2eproto}, {
      &scc_info_ViewEntityPoseAtParams_knowrob_5fameva_2eproto.base,
      &scc_info_ViewEntityTrajParams_knowrob_5fameva_2eproto.base,}};

static void InitDefaultsscc_info_ViewEntityPoseAtParams_knowrob_5fameva_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::knowrob_ameva::_ViewEntityPoseAtParams_default_instance_;
    new (ptr) ::knowrob_ameva::ViewEntityPoseAtParams();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::knowrob_ameva::ViewEntityPoseAtParams::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ViewEntityPoseAtParams_knowrob_5fameva_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ViewEntityPoseAtParams_knowrob_5fameva_2eproto}, {}};

static void InitDefaultsscc_info_ViewEntityTrajParams_knowrob_5fameva_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::knowrob_ameva::_ViewEntityTrajParams_default_instance_;
    new (ptr) ::knowrob_ameva::ViewEntityTrajParams();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::knowrob_ameva::ViewEntityTrajParams::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ViewEntityTrajParams_knowrob_5fameva_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ViewEntityTrajParams_knowrob_5fameva_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_knowrob_5fameva_2eproto[3];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_knowrob_5fameva_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_knowrob_5fameva_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_knowrob_5fameva_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::knowrob_ameva::ViewEntityPoseAtParams, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::knowrob_ameva::ViewEntityPoseAtParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::knowrob_ameva::ViewEntityPoseAtParams, id_),
  PROTOBUF_FIELD_OFFSET(::knowrob_ameva::ViewEntityPoseAtParams, timestamp_),
  PROTOBUF_FIELD_OFFSET(::knowrob_ameva::ViewEntityPoseAtParams, marker_),
  PROTOBUF_FIELD_OFFSET(::knowrob_ameva::ViewEntityPoseAtParams, scale_),
  PROTOBUF_FIELD_OFFSET(::knowrob_ameva::ViewEntityPoseAtParams, color_),
  PROTOBUF_FIELD_OFFSET(::knowrob_ameva::ViewEntityPoseAtParams, unlit_),
  0,
  2,
  5,
  3,
  1,
  4,
  PROTOBUF_FIELD_OFFSET(::knowrob_ameva::ViewEntityTrajParams, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::knowrob_ameva::ViewEntityTrajParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::knowrob_ameva::ViewEntityTrajParams, id_),
  PROTOBUF_FIELD_OFFSET(::knowrob_ameva::ViewEntityTrajParams, start_),
  PROTOBUF_FIELD_OFFSET(::knowrob_ameva::ViewEntityTrajParams, end_),
  PROTOBUF_FIELD_OFFSET(::knowrob_ameva::ViewEntityTrajParams, marker_),
  PROTOBUF_FIELD_OFFSET(::knowrob_ameva::ViewEntityTrajParams, scale_),
  PROTOBUF_FIELD_OFFSET(::knowrob_ameva::ViewEntityTrajParams, color_),
  PROTOBUF_FIELD_OFFSET(::knowrob_ameva::ViewEntityTrajParams, unlit_),
  0,
  2,
  3,
  6,
  4,
  1,
  5,
  PROTOBUF_FIELD_OFFSET(::knowrob_ameva::KRAmevaEvent, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::knowrob_ameva::KRAmevaEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::knowrob_ameva::KRAmevaEvent, func_),
  PROTOBUF_FIELD_OFFSET(::knowrob_ameva::KRAmevaEvent, viewentityposeparam_),
  PROTOBUF_FIELD_OFFSET(::knowrob_ameva::KRAmevaEvent, viewentitytrajparam_),
  2,
  0,
  1,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 11, sizeof(::knowrob_ameva::ViewEntityPoseAtParams)},
  { 17, 29, sizeof(::knowrob_ameva::ViewEntityTrajParams)},
  { 36, 44, sizeof(::knowrob_ameva::KRAmevaEvent)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::knowrob_ameva::_ViewEntityPoseAtParams_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::knowrob_ameva::_ViewEntityTrajParams_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::knowrob_ameva::_KRAmevaEvent_default_instance_),
};

const char descriptor_table_protodef_knowrob_5fameva_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\023knowrob_ameva.proto\022\rknowrob_ameva\"\217\001\n"
  "\026ViewEntityPoseAtParams\022\n\n\002id\030\001 \002(\t\022\021\n\tt"
  "imestamp\030\002 \002(\002\022)\n\006marker\030\003 \002(\0162\031.knowrob"
  "_ameva.MarkerType\022\r\n\005scale\030\004 \002(\002\022\r\n\005colo"
  "r\030\005 \002(\t\022\r\n\005unlit\030\007 \002(\010\"\226\001\n\024ViewEntityTra"
  "jParams\022\n\n\002id\030\001 \002(\t\022\r\n\005start\030\002 \002(\002\022\013\n\003en"
  "d\030\003 \002(\002\022)\n\006marker\030\004 \002(\0162\031.knowrob_ameva."
  "MarkerType\022\r\n\005scale\030\005 \002(\002\022\r\n\005color\030\006 \002(\t"
  "\022\r\n\005unlit\030\007 \002(\010\"\246\002\n\014KRAmevaEvent\0224\n\004func"
  "\030\001 \002(\0162&.knowrob_ameva.KRAmevaEvent.Func"
  "ToCall\022B\n\023viewEntityPoseParam\030\002 \001(\0132%.kn"
  "owrob_ameva.ViewEntityPoseAtParams\022@\n\023vi"
  "ewEntityTrajParam\030\003 \001(\0132#.knowrob_ameva."
  "ViewEntityTrajParams\"Z\n\nFuncToCall\022\017\n\013Se"
  "tDatabase\020\001\022\021\n\rSetCollection\020\002\022\024\n\020ViewEn"
  "tityPoseAt\020\003\022\022\n\016ViewEntityTraj\020\004*D\n\nMark"
  "erType\022\007\n\003Box\020\001\022\n\n\006Sphere\020\002\022\014\n\010Cylinder\020"
  "\003\022\t\n\005Arrow\020\004\022\010\n\004Axis\020\005"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_knowrob_5fameva_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_knowrob_5fameva_2eproto_sccs[3] = {
  &scc_info_KRAmevaEvent_knowrob_5fameva_2eproto.base,
  &scc_info_ViewEntityPoseAtParams_knowrob_5fameva_2eproto.base,
  &scc_info_ViewEntityTrajParams_knowrob_5fameva_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_knowrob_5fameva_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_knowrob_5fameva_2eproto = {
  false, false, descriptor_table_protodef_knowrob_5fameva_2eproto, "knowrob_ameva.proto", 702,
  &descriptor_table_knowrob_5fameva_2eproto_once, descriptor_table_knowrob_5fameva_2eproto_sccs, descriptor_table_knowrob_5fameva_2eproto_deps, 3, 0,
  schemas, file_default_instances, TableStruct_knowrob_5fameva_2eproto::offsets,
  file_level_metadata_knowrob_5fameva_2eproto, 3, file_level_enum_descriptors_knowrob_5fameva_2eproto, file_level_service_descriptors_knowrob_5fameva_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_knowrob_5fameva_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_knowrob_5fameva_2eproto)), true);
namespace knowrob_ameva {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* KRAmevaEvent_FuncToCall_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_knowrob_5fameva_2eproto);
  return file_level_enum_descriptors_knowrob_5fameva_2eproto[0];
}
bool KRAmevaEvent_FuncToCall_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr KRAmevaEvent_FuncToCall KRAmevaEvent::SetDatabase;
constexpr KRAmevaEvent_FuncToCall KRAmevaEvent::SetCollection;
constexpr KRAmevaEvent_FuncToCall KRAmevaEvent::ViewEntityPoseAt;
constexpr KRAmevaEvent_FuncToCall KRAmevaEvent::ViewEntityTraj;
constexpr KRAmevaEvent_FuncToCall KRAmevaEvent::FuncToCall_MIN;
constexpr KRAmevaEvent_FuncToCall KRAmevaEvent::FuncToCall_MAX;
constexpr int KRAmevaEvent::FuncToCall_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MarkerType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_knowrob_5fameva_2eproto);
  return file_level_enum_descriptors_knowrob_5fameva_2eproto[1];
}
bool MarkerType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void ViewEntityPoseAtParams::InitAsDefaultInstance() {
}
class ViewEntityPoseAtParams::_Internal {
 public:
  using HasBits = decltype(std::declval<ViewEntityPoseAtParams>()._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_marker(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_scale(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_color(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_unlit(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000003f) ^ 0x0000003f) != 0;
  }
};

ViewEntityPoseAtParams::ViewEntityPoseAtParams(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:knowrob_ameva.ViewEntityPoseAtParams)
}
ViewEntityPoseAtParams::ViewEntityPoseAtParams(const ViewEntityPoseAtParams& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_id()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  color_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_color()) {
    color_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_color(),
      GetArena());
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&marker_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(marker_));
  // @@protoc_insertion_point(copy_constructor:knowrob_ameva.ViewEntityPoseAtParams)
}

void ViewEntityPoseAtParams::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ViewEntityPoseAtParams_knowrob_5fameva_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  color_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unlit_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(unlit_));
  marker_ = 1;
}

ViewEntityPoseAtParams::~ViewEntityPoseAtParams() {
  // @@protoc_insertion_point(destructor:knowrob_ameva.ViewEntityPoseAtParams)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ViewEntityPoseAtParams::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  color_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ViewEntityPoseAtParams::ArenaDtor(void* object) {
  ViewEntityPoseAtParams* _this = reinterpret_cast< ViewEntityPoseAtParams* >(object);
  (void)_this;
}
void ViewEntityPoseAtParams::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ViewEntityPoseAtParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ViewEntityPoseAtParams& ViewEntityPoseAtParams::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ViewEntityPoseAtParams_knowrob_5fameva_2eproto.base);
  return *internal_default_instance();
}


void ViewEntityPoseAtParams::Clear() {
// @@protoc_insertion_point(message_clear_start:knowrob_ameva.ViewEntityPoseAtParams)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      color_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000003cu) {
    ::memset(&timestamp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&unlit_) -
        reinterpret_cast<char*>(&timestamp_)) + sizeof(unlit_));
    marker_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewEntityPoseAtParams::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "knowrob_ameva.ViewEntityPoseAtParams.id");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required float timestamp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          _Internal::set_has_timestamp(&has_bits);
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // required .knowrob_ameva.MarkerType marker = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::knowrob_ameva::MarkerType_IsValid(val))) {
            _internal_set_marker(static_cast<::knowrob_ameva::MarkerType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required float scale = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          _Internal::set_has_scale(&has_bits);
          scale_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // required string color = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_color();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "knowrob_ameva.ViewEntityPoseAtParams.color");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bool unlit = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_unlit(&has_bits);
          unlit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ViewEntityPoseAtParams::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:knowrob_ameva.ViewEntityPoseAtParams)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "knowrob_ameva.ViewEntityPoseAtParams.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // required float timestamp = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_timestamp(), target);
  }

  // required .knowrob_ameva.MarkerType marker = 3;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_marker(), target);
  }

  // required float scale = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_scale(), target);
  }

  // required string color = 5;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_color().data(), static_cast<int>(this->_internal_color().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "knowrob_ameva.ViewEntityPoseAtParams.color");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_color(), target);
  }

  // required bool unlit = 7;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->_internal_unlit(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:knowrob_ameva.ViewEntityPoseAtParams)
  return target;
}

size_t ViewEntityPoseAtParams::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:knowrob_ameva.ViewEntityPoseAtParams)
  size_t total_size = 0;

  if (_internal_has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (_internal_has_color()) {
    // required string color = 5;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_color());
  }

  if (_internal_has_timestamp()) {
    // required float timestamp = 2;
    total_size += 1 + 4;
  }

  if (_internal_has_scale()) {
    // required float scale = 4;
    total_size += 1 + 4;
  }

  if (_internal_has_unlit()) {
    // required bool unlit = 7;
    total_size += 1 + 1;
  }

  if (_internal_has_marker()) {
    // required .knowrob_ameva.MarkerType marker = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_marker());
  }

  return total_size;
}
size_t ViewEntityPoseAtParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:knowrob_ameva.ViewEntityPoseAtParams)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());

    // required string color = 5;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_color());

    // required float timestamp = 2;
    total_size += 1 + 4;

    // required float scale = 4;
    total_size += 1 + 4;

    // required bool unlit = 7;
    total_size += 1 + 1;

    // required .knowrob_ameva.MarkerType marker = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_marker());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewEntityPoseAtParams::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:knowrob_ameva.ViewEntityPoseAtParams)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewEntityPoseAtParams* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ViewEntityPoseAtParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:knowrob_ameva.ViewEntityPoseAtParams)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:knowrob_ameva.ViewEntityPoseAtParams)
    MergeFrom(*source);
  }
}

void ViewEntityPoseAtParams::MergeFrom(const ViewEntityPoseAtParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:knowrob_ameva.ViewEntityPoseAtParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_color(from._internal_color());
    }
    if (cached_has_bits & 0x00000004u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000008u) {
      scale_ = from.scale_;
    }
    if (cached_has_bits & 0x00000010u) {
      unlit_ = from.unlit_;
    }
    if (cached_has_bits & 0x00000020u) {
      marker_ = from.marker_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ViewEntityPoseAtParams::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:knowrob_ameva.ViewEntityPoseAtParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewEntityPoseAtParams::CopyFrom(const ViewEntityPoseAtParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:knowrob_ameva.ViewEntityPoseAtParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewEntityPoseAtParams::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ViewEntityPoseAtParams::InternalSwap(ViewEntityPoseAtParams* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  color_.Swap(&other->color_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewEntityPoseAtParams, unlit_)
      + sizeof(ViewEntityPoseAtParams::unlit_)
      - PROTOBUF_FIELD_OFFSET(ViewEntityPoseAtParams, timestamp_)>(
          reinterpret_cast<char*>(&timestamp_),
          reinterpret_cast<char*>(&other->timestamp_));
  swap(marker_, other->marker_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewEntityPoseAtParams::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ViewEntityTrajParams::InitAsDefaultInstance() {
}
class ViewEntityTrajParams::_Internal {
 public:
  using HasBits = decltype(std::declval<ViewEntityTrajParams>()._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_start(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_end(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_marker(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_scale(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_color(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_unlit(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000007f) ^ 0x0000007f) != 0;
  }
};

ViewEntityTrajParams::ViewEntityTrajParams(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:knowrob_ameva.ViewEntityTrajParams)
}
ViewEntityTrajParams::ViewEntityTrajParams(const ViewEntityTrajParams& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_id()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  color_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_color()) {
    color_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_color(),
      GetArena());
  }
  ::memcpy(&start_, &from.start_,
    static_cast<size_t>(reinterpret_cast<char*>(&marker_) -
    reinterpret_cast<char*>(&start_)) + sizeof(marker_));
  // @@protoc_insertion_point(copy_constructor:knowrob_ameva.ViewEntityTrajParams)
}

void ViewEntityTrajParams::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ViewEntityTrajParams_knowrob_5fameva_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  color_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unlit_) -
      reinterpret_cast<char*>(&start_)) + sizeof(unlit_));
  marker_ = 1;
}

ViewEntityTrajParams::~ViewEntityTrajParams() {
  // @@protoc_insertion_point(destructor:knowrob_ameva.ViewEntityTrajParams)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ViewEntityTrajParams::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  color_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ViewEntityTrajParams::ArenaDtor(void* object) {
  ViewEntityTrajParams* _this = reinterpret_cast< ViewEntityTrajParams* >(object);
  (void)_this;
}
void ViewEntityTrajParams::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ViewEntityTrajParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ViewEntityTrajParams& ViewEntityTrajParams::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ViewEntityTrajParams_knowrob_5fameva_2eproto.base);
  return *internal_default_instance();
}


void ViewEntityTrajParams::Clear() {
// @@protoc_insertion_point(message_clear_start:knowrob_ameva.ViewEntityTrajParams)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      color_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000007cu) {
    ::memset(&start_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&unlit_) -
        reinterpret_cast<char*>(&start_)) + sizeof(unlit_));
    marker_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewEntityTrajParams::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "knowrob_ameva.ViewEntityTrajParams.id");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required float start = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          _Internal::set_has_start(&has_bits);
          start_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // required float end = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          _Internal::set_has_end(&has_bits);
          end_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // required .knowrob_ameva.MarkerType marker = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::knowrob_ameva::MarkerType_IsValid(val))) {
            _internal_set_marker(static_cast<::knowrob_ameva::MarkerType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required float scale = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 45)) {
          _Internal::set_has_scale(&has_bits);
          scale_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // required string color = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_color();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "knowrob_ameva.ViewEntityTrajParams.color");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bool unlit = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_unlit(&has_bits);
          unlit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ViewEntityTrajParams::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:knowrob_ameva.ViewEntityTrajParams)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "knowrob_ameva.ViewEntityTrajParams.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // required float start = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_start(), target);
  }

  // required float end = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_end(), target);
  }

  // required .knowrob_ameva.MarkerType marker = 4;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_marker(), target);
  }

  // required float scale = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(5, this->_internal_scale(), target);
  }

  // required string color = 6;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_color().data(), static_cast<int>(this->_internal_color().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "knowrob_ameva.ViewEntityTrajParams.color");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_color(), target);
  }

  // required bool unlit = 7;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->_internal_unlit(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:knowrob_ameva.ViewEntityTrajParams)
  return target;
}

size_t ViewEntityTrajParams::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:knowrob_ameva.ViewEntityTrajParams)
  size_t total_size = 0;

  if (_internal_has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (_internal_has_color()) {
    // required string color = 6;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_color());
  }

  if (_internal_has_start()) {
    // required float start = 2;
    total_size += 1 + 4;
  }

  if (_internal_has_end()) {
    // required float end = 3;
    total_size += 1 + 4;
  }

  if (_internal_has_scale()) {
    // required float scale = 5;
    total_size += 1 + 4;
  }

  if (_internal_has_unlit()) {
    // required bool unlit = 7;
    total_size += 1 + 1;
  }

  if (_internal_has_marker()) {
    // required .knowrob_ameva.MarkerType marker = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_marker());
  }

  return total_size;
}
size_t ViewEntityTrajParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:knowrob_ameva.ViewEntityTrajParams)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000007f) ^ 0x0000007f) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());

    // required string color = 6;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_color());

    // required float start = 2;
    total_size += 1 + 4;

    // required float end = 3;
    total_size += 1 + 4;

    // required float scale = 5;
    total_size += 1 + 4;

    // required bool unlit = 7;
    total_size += 1 + 1;

    // required .knowrob_ameva.MarkerType marker = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_marker());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewEntityTrajParams::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:knowrob_ameva.ViewEntityTrajParams)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewEntityTrajParams* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ViewEntityTrajParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:knowrob_ameva.ViewEntityTrajParams)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:knowrob_ameva.ViewEntityTrajParams)
    MergeFrom(*source);
  }
}

void ViewEntityTrajParams::MergeFrom(const ViewEntityTrajParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:knowrob_ameva.ViewEntityTrajParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_color(from._internal_color());
    }
    if (cached_has_bits & 0x00000004u) {
      start_ = from.start_;
    }
    if (cached_has_bits & 0x00000008u) {
      end_ = from.end_;
    }
    if (cached_has_bits & 0x00000010u) {
      scale_ = from.scale_;
    }
    if (cached_has_bits & 0x00000020u) {
      unlit_ = from.unlit_;
    }
    if (cached_has_bits & 0x00000040u) {
      marker_ = from.marker_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ViewEntityTrajParams::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:knowrob_ameva.ViewEntityTrajParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewEntityTrajParams::CopyFrom(const ViewEntityTrajParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:knowrob_ameva.ViewEntityTrajParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewEntityTrajParams::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ViewEntityTrajParams::InternalSwap(ViewEntityTrajParams* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  color_.Swap(&other->color_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewEntityTrajParams, unlit_)
      + sizeof(ViewEntityTrajParams::unlit_)
      - PROTOBUF_FIELD_OFFSET(ViewEntityTrajParams, start_)>(
          reinterpret_cast<char*>(&start_),
          reinterpret_cast<char*>(&other->start_));
  swap(marker_, other->marker_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewEntityTrajParams::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void KRAmevaEvent::InitAsDefaultInstance() {
  ::knowrob_ameva::_KRAmevaEvent_default_instance_._instance.get_mutable()->viewentityposeparam_ = const_cast< ::knowrob_ameva::ViewEntityPoseAtParams*>(
      ::knowrob_ameva::ViewEntityPoseAtParams::internal_default_instance());
  ::knowrob_ameva::_KRAmevaEvent_default_instance_._instance.get_mutable()->viewentitytrajparam_ = const_cast< ::knowrob_ameva::ViewEntityTrajParams*>(
      ::knowrob_ameva::ViewEntityTrajParams::internal_default_instance());
}
class KRAmevaEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<KRAmevaEvent>()._has_bits_);
  static void set_has_func(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::knowrob_ameva::ViewEntityPoseAtParams& viewentityposeparam(const KRAmevaEvent* msg);
  static void set_has_viewentityposeparam(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::knowrob_ameva::ViewEntityTrajParams& viewentitytrajparam(const KRAmevaEvent* msg);
  static void set_has_viewentitytrajparam(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000004) ^ 0x00000004) != 0;
  }
};

const ::knowrob_ameva::ViewEntityPoseAtParams&
KRAmevaEvent::_Internal::viewentityposeparam(const KRAmevaEvent* msg) {
  return *msg->viewentityposeparam_;
}
const ::knowrob_ameva::ViewEntityTrajParams&
KRAmevaEvent::_Internal::viewentitytrajparam(const KRAmevaEvent* msg) {
  return *msg->viewentitytrajparam_;
}
KRAmevaEvent::KRAmevaEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:knowrob_ameva.KRAmevaEvent)
}
KRAmevaEvent::KRAmevaEvent(const KRAmevaEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_viewentityposeparam()) {
    viewentityposeparam_ = new ::knowrob_ameva::ViewEntityPoseAtParams(*from.viewentityposeparam_);
  } else {
    viewentityposeparam_ = nullptr;
  }
  if (from._internal_has_viewentitytrajparam()) {
    viewentitytrajparam_ = new ::knowrob_ameva::ViewEntityTrajParams(*from.viewentitytrajparam_);
  } else {
    viewentitytrajparam_ = nullptr;
  }
  func_ = from.func_;
  // @@protoc_insertion_point(copy_constructor:knowrob_ameva.KRAmevaEvent)
}

void KRAmevaEvent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_KRAmevaEvent_knowrob_5fameva_2eproto.base);
  ::memset(&viewentityposeparam_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&viewentitytrajparam_) -
      reinterpret_cast<char*>(&viewentityposeparam_)) + sizeof(viewentitytrajparam_));
  func_ = 1;
}

KRAmevaEvent::~KRAmevaEvent() {
  // @@protoc_insertion_point(destructor:knowrob_ameva.KRAmevaEvent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void KRAmevaEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete viewentityposeparam_;
  if (this != internal_default_instance()) delete viewentitytrajparam_;
}

void KRAmevaEvent::ArenaDtor(void* object) {
  KRAmevaEvent* _this = reinterpret_cast< KRAmevaEvent* >(object);
  (void)_this;
}
void KRAmevaEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void KRAmevaEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const KRAmevaEvent& KRAmevaEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_KRAmevaEvent_knowrob_5fameva_2eproto.base);
  return *internal_default_instance();
}


void KRAmevaEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:knowrob_ameva.KRAmevaEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(viewentityposeparam_ != nullptr);
      viewentityposeparam_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(viewentitytrajparam_ != nullptr);
      viewentitytrajparam_->Clear();
    }
    func_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KRAmevaEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required .knowrob_ameva.KRAmevaEvent.FuncToCall func = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::knowrob_ameva::KRAmevaEvent_FuncToCall_IsValid(val))) {
            _internal_set_func(static_cast<::knowrob_ameva::KRAmevaEvent_FuncToCall>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .knowrob_ameva.ViewEntityPoseAtParams viewEntityPoseParam = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_viewentityposeparam(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .knowrob_ameva.ViewEntityTrajParams viewEntityTrajParam = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_viewentitytrajparam(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* KRAmevaEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:knowrob_ameva.KRAmevaEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .knowrob_ameva.KRAmevaEvent.FuncToCall func = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_func(), target);
  }

  // optional .knowrob_ameva.ViewEntityPoseAtParams viewEntityPoseParam = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::viewentityposeparam(this), target, stream);
  }

  // optional .knowrob_ameva.ViewEntityTrajParams viewEntityTrajParam = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::viewentitytrajparam(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:knowrob_ameva.KRAmevaEvent)
  return target;
}

size_t KRAmevaEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:knowrob_ameva.KRAmevaEvent)
  size_t total_size = 0;

  // required .knowrob_ameva.KRAmevaEvent.FuncToCall func = 1;
  if (_internal_has_func()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_func());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .knowrob_ameva.ViewEntityPoseAtParams viewEntityPoseParam = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *viewentityposeparam_);
    }

    // optional .knowrob_ameva.ViewEntityTrajParams viewEntityTrajParam = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *viewentitytrajparam_);
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KRAmevaEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:knowrob_ameva.KRAmevaEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const KRAmevaEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<KRAmevaEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:knowrob_ameva.KRAmevaEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:knowrob_ameva.KRAmevaEvent)
    MergeFrom(*source);
  }
}

void KRAmevaEvent::MergeFrom(const KRAmevaEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:knowrob_ameva.KRAmevaEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_viewentityposeparam()->::knowrob_ameva::ViewEntityPoseAtParams::MergeFrom(from._internal_viewentityposeparam());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_viewentitytrajparam()->::knowrob_ameva::ViewEntityTrajParams::MergeFrom(from._internal_viewentitytrajparam());
    }
    if (cached_has_bits & 0x00000004u) {
      func_ = from.func_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void KRAmevaEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:knowrob_ameva.KRAmevaEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KRAmevaEvent::CopyFrom(const KRAmevaEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:knowrob_ameva.KRAmevaEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KRAmevaEvent::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (_internal_has_viewentityposeparam()) {
    if (!viewentityposeparam_->IsInitialized()) return false;
  }
  if (_internal_has_viewentitytrajparam()) {
    if (!viewentitytrajparam_->IsInitialized()) return false;
  }
  return true;
}

void KRAmevaEvent::InternalSwap(KRAmevaEvent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(KRAmevaEvent, viewentitytrajparam_)
      + sizeof(KRAmevaEvent::viewentitytrajparam_)
      - PROTOBUF_FIELD_OFFSET(KRAmevaEvent, viewentityposeparam_)>(
          reinterpret_cast<char*>(&viewentityposeparam_),
          reinterpret_cast<char*>(&other->viewentityposeparam_));
  swap(func_, other->func_);
}

::PROTOBUF_NAMESPACE_ID::Metadata KRAmevaEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace knowrob_ameva
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::knowrob_ameva::ViewEntityPoseAtParams* Arena::CreateMaybeMessage< ::knowrob_ameva::ViewEntityPoseAtParams >(Arena* arena) {
  return Arena::CreateMessageInternal< ::knowrob_ameva::ViewEntityPoseAtParams >(arena);
}
template<> PROTOBUF_NOINLINE ::knowrob_ameva::ViewEntityTrajParams* Arena::CreateMaybeMessage< ::knowrob_ameva::ViewEntityTrajParams >(Arena* arena) {
  return Arena::CreateMessageInternal< ::knowrob_ameva::ViewEntityTrajParams >(arena);
}
template<> PROTOBUF_NOINLINE ::knowrob_ameva::KRAmevaEvent* Arena::CreateMaybeMessage< ::knowrob_ameva::KRAmevaEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::knowrob_ameva::KRAmevaEvent >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
