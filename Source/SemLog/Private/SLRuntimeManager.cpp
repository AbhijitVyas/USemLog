// Copyright 2017, Institute for Artificial Intelligence - University of Bremen
// Author: Andrei Haidu (http://haidu.eu)

#include "SLRuntimeManager.h"
#include "SLStatics.h"


// Sets default values
ASLRuntimeManager::ASLRuntimeManager()
{
	PrimaryActorTick.bCanEverTick = true;

	// Default log directory
	LogDirectory = FPaths::GameDir() + "SemLog";
	EpisodeId = "AutoGenerated";
	
	// Flag defaults
	bLogRawData = true;
	bLogEventData = true;

	// Create UObjects
	EventDataLogger = CreateDefaultSubobject<USLEventData>(TEXT("EventDataLogger"));
	RawDataLogger = CreateDefaultSubobject<USLRawData>(TEXT("RawDataLogger"));
}

// Called when the game starts or when spawned
void ASLRuntimeManager::BeginPlay()
{
	Super::BeginPlay();

	// No tick by default
	SetActorTickEnabled(false);

	// Generate episode Id if not manually entered
	if (EpisodeId.Equals("AutoGenerated"))
	{
		EpisodeId = FSLStatics::GenerateRandomFString(4);
	}

	if (bLogRawData && RawDataLogger)
	{
		// Enable tick for raw data logging
		SetActorTickEnabled(true);

		// Initalize the raw data logger and log the static and dynamic entities
		RawDataLogger->Init(GetWorld(), EpisodeId, LogDirectory, 0.1f);
		RawDataLogger->FirstLog();
	}

	if (bLogEventData && EventDataLogger)
	{
		// Initalize the raw data logger and log the static and dynamic entities
		EventDataLogger->Init(EpisodeId, LogDirectory);
		EventDataLogger->WriteToFile();
	}
}

// Called every frame
void ASLRuntimeManager::Tick(float DeltaTime)
{
	Super::Tick(DeltaTime);

	// Log the raw data of the dynamic entities
	RawDataLogger->LogDynamic();
}

